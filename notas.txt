version: '3.9'

services:
  redis:
    image: redis:7.2
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
  
  web:
    build: .
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - ./media:/app/media
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - app-network
  
  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_volume:/app/staticfiles
      - ./media:/app/media
      - ./nginx_logs:/var/log/nginx
    depends_on:
      - web
    networks:
      - app-network

  db:
    image: postgres:16
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=secret
    depends_on:
      - db
      - redis
    networks:
      - app-network

networks:
  app-network:
    name: app-network
    driver: bridge

volumes:
  postgres-data:
  static_volume:
  nginx_logs:
  media:
  redis-data:
  grafana-data:
